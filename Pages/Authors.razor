@page "/Authors"
@using My_First_Blazor_App.Data
@inject NavigationManager NavigationManager
@inject IAuthorService AuthorService
@inject IJSRuntime JSRuntime
@implements IDisposable 



    <div class="col-12">
        <h3><b>Enter Author Information</b></h3>

        <hr />

       <ServerValidations IsVisible ="IsVisible" Results="Results">
           <span>Author: </span>@RecordName
       </ServerValidations>

        <EditForm Model="@authorField" OnValidSubmit="@SaveAuthor">
            @*<DataAnnotationsValidator/>*@
           
            <div class="col-12 row">
                <label class="col-2" style="font-weight: bold"> First Name:</label>
                <input @ref ="firstNameText" class="form-control col-3" placeholder="First Name" @bind ="authorField.FirstName" />
                &nbsp;<ValidationMessage For="@(() => authorField.FirstName)" />
            </div>
            <br />

            <div class="col-12 row">
                <label class="col-2" style="font-weight: bold"> Last Name:</label>
                <InputText class="form-control col-3" placeholder="Last Name" @bind-Value="authorField.LastName" />
                &nbsp;<ValidationMessage For="@(() => authorField.LastName)" />
            </div>
            <br />

            <div class="col-12 row">
                <label class="col-2" style="font-weight: bold"> Email Address:</label>
                <InputText class="form-control col-3" placeholder="Email" @bind-Value="authorField.EmailAddress" />
                &nbsp;<ValidationMessage For="@(() => authorField.EmailAddress)" />
            </div>
            <br />

            <div class="col-12 row">
                <label class="col-2" style="font-weight: bold"> City:</label>
                @*<InputText class="form-control col-3" placeholder="City" @bind-Value="authorField.City" />
                &nbsp;<ValidationMessage For="@(() => authorField.City)" />*@
                @*<InputSelect @bind-Value="authorField.City" class="form-control col-3">
                @if (@Cities != null)
                {
                    @foreach (var city in Cities)
                     {
                         <option value="@city">@city</option>
                     }
                }
               </InputSelect>*@

                <SelectCities></SelectCities>
            </div>
            <br />

            <div class="col-12 row">
                <label class="col-2" style="font-weight: bold"> Salary:</label>
                <InputNumber class="form-control col-3" placeholder="Salary" @bind-Value="authorField.Salary" />
                &nbsp;<ValidationMessage For="@(() => authorField.Salary)" />
            </div>
            <br />

            <div class="col-12 row">
                <span class="col-2"></span>
                <input class="form-control col-1 btn btn-primary" type="submit" value="Save" />

                <span>&nbsp;</span>
                <input class="form-control col-1 btn btn-primary" type="submit" value="Clear" />
               
            </div>


        </EditForm>
    </div>
<br/>


<div class="col-10">

    <h3><b>Authors</b></h3>
    <table class="table">
        <thead>
            <tr>
                <th>AuthorId</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email Address</th>
                <th>Salary</th>
            </tr>
       
        </thead>
        <tbody>
            @foreach (Author author in AuthorList)
            {
                <tr>
                    <td> <NavLink href=@($"/authors/authorsDetail/{author.AuthorId}")> @author.AuthorId </NavLink></td>
                    <td> @author.FirstName</td>
                    <td> @author.LastName</td>
                    <td> @author.EmailAddress</td>
                    <td> $@author.Salary</td>
                </tr>
            }


        </tbody>
       
    </table>
   
</div>

<hr/>

<div class="col-12 row">@AuthorService.GetCreatedDate()</div>
<div class="col-12 row"> Version: @AuthorService.GetVersion()</div>



@code{

    private Author authorField { get; set; }
    public List<Austthor> AuthorList { get; set; }
    public string[] Cities { get; set; }

    public string RecordName { get; set; }
    public bool Results { get; set; }
    ElementReference firstNameText;

    public bool IsVisible { get; set; }




    protected override void OnInitialized()
    {
        authorField = new Author();

        AuthorList = AuthorService.GetAuthors();
    }

    public void Dispose()
    {

        Console.WriteLine("Authors - Dispose");
    }
    private async Task SaveAuthor()
    {
        Results = false; //AuthorService.SaveAuthor(authorField);
        if(authorField != null)
        {
            IsVisible = true;
        }
        else
        {
            IsVisible = false;
        }

        var firstname = authorField.FirstName;
        var lastname = authorField.LastName;

        RecordName = firstname + " " + lastname;
        authorField = new Author();


        // await JSRuntime.InvokeVoidAsync("SaveMessage",firstname,lastname);
        await JSRuntime.InvokeVoidAsync("setFocusOnElement",firstNameText);

    }

}
